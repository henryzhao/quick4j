<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eliteams.quick4j.web.dao.BooksMapper">
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.Books">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="bookname" jdbcType="VARCHAR" property="bookname" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="years" jdbcType="VARCHAR" property="years" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="priceReal" jdbcType="DECIMAL" property="pricereal" />
    <result column="source" jdbcType="VARCHAR" property="source" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, bookname, pic, type, years, price, priceReal, source
  </sql>
  <select id="selectByExample" parameterType="com.eliteams.quick4j.web.model.BooksExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from books
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from books
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.BooksExample">
    delete from books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.Books">
    insert into books (id, code, bookname, 
      pic, type, years, price, 
      priceReal, source)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{bookname,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{years,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{pricereal,jdbcType=DECIMAL}, #{source,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.Books">
    insert into books
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="bookname != null">
        bookname,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="years != null">
        years,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="pricereal != null">
        priceReal,
      </if>
      <if test="source != null">
        source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="years != null">
        #{years,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="pricereal != null">
        #{pricereal,jdbcType=DECIMAL},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.BooksExample" resultType="java.lang.Integer">
    select count(*) from books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update books
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.bookname != null">
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.years != null">
        years = #{record.years,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.pricereal != null">
        priceReal = #{record.pricereal,jdbcType=DECIMAL},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update books
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      years = #{record.years,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      priceReal = #{record.pricereal,jdbcType=DECIMAL},
      source = #{record.source,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.Books">
    update books
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null">
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="years != null">
        years = #{years,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="pricereal != null">
        priceReal = #{pricereal,jdbcType=DECIMAL},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.Books">
    update books
    set code = #{code,jdbcType=VARCHAR},
      bookname = #{bookname,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      years = #{years,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      priceReal = #{pricereal,jdbcType=DECIMAL},
      source = #{source,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!--通过example和page来查询列表-->
  <select id="selectListByExampleAndPage" parameterType="com.eliteams.quick4j.web.model.BooksExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>